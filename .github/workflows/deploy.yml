    - name: 🚀 Execute Deployment on EC2
      run: |
        ssh -o StrictHostKeyChecking=no -o ConnectTimeout=30 -i ~/.ssh/id_rsa ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} '
          set -e
          set -x
          
          echo "🎯 Starting deployment..."
          
          # Create app directory
          mkdir -p /home/ubuntu/telegram-mtproto
          cd /home/ubuntu/telegram-mtproto
          
          # Stop existing containers
          echo "🛑 Stopping containers..."
          docker-compose down --timeout 30 || true
          
          # Update repository
          if [ -d ".git" ]; then
            echo "📥 Updating repository..."
            git pull origin main
          else
            echo "📥 Cloning repository..."
            git clone https://github.com/${{ github.repository }}.git .
          fi
          
          # Create .env
          echo "📝 Creating .env..."
          cat > .env << EOF
        TELEGRAM_API_ID=${{ secrets.TELEGRAM_API_ID }}
        TELEGRAM_API_HASH=${{ secrets.TELEGRAM_API_HASH }}
        TELEGRAM_PHONE=${{ secrets.TELEGRAM_PHONE }}
        DATABASE_URL=${{ secrets.DATABASE_URL }}
        AWS_DEFAULT_REGION=${{ secrets.AWS_DEFAULT_REGION }}
        S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }}
        VIDEO_PROCESSOR_FUNCTION_NAME=${{ secrets.VIDEO_PROCESSOR_FUNCTION_NAME }}
        RESPONSE_HANDLER_FUNCTION_NAME=${{ secrets.RESPONSE_HANDLER_FUNCTION_NAME }}
        TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}
        ENVIRONMENT=production
        LOG_LEVEL=INFO
        EOF
          
          # Build and start
          echo "🏗️ Building..."
          docker-compose build --no-cache
          
          echo "🚀 Starting containers..."
          docker-compose up -d
          
          # Wait and test
          echo "⏳ Waiting 30s for startup..."
          sleep 30
          
          # Quick health check
          if curl -f http://localhost:8000/health; then
            echo "✅ Deployment successful!"
          else
            echo "❌ Health check failed"
            docker-compose logs --tail=20
            exit 1
          fi
        '
